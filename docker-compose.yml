version: '3.8'
services:
  zookeeper:
    image: bitnami/zookeeper:latest
    container_name: zookeeper
    environment:
      ALLOW_ANONYMOUS_LOGIN: "yes"
    ports:
      - "2181:2181"
    volumes:
      - ./config/zookeeper.properties:/opt/bitnami/zookeeper/conf/zoo.cfg
      - ./data/zookeeper:/bitnami/zookeeper

  kafka:
    image: bitnami/kafka:latest
    container_name: kafka
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      ALLOW_PLAINTEXT_LISTENER: "yes"
      KAFKA_LISTENERS: PLAINTEXT://:9092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
    ports:
      - "9092:9092"
    volumes:
      - ./config/server.properties:/opt/bitnami/kafka/config/server.properties
      - ./data/kafka:/bitnami/kafka

  mongodb:
    image: mongo:latest
    container_name: mongodb
    volumes:
      - ./data/mongo:/data/db
    ports:
      - "27017:27017"

  crud_service:
    build:
      context: .
      dockerfile: Dockerfile.crud  # Dockerfile that installs python deps, copies code
    container_name: crud_service
    depends_on:
      - mongodb
      - kafka
    ports:
      - "8000:8000"
    # command: "uvicorn crud_service:app --host 0.0.0.0 --port 8000"

  grpc_service:
    build:
      context: .
      dockerfile: Dockerfile.grpc
    container_name: grpc_service
    depends_on:
      - kafka
    ports:
      - "50051:50051"

  grpc_client:
    build:
      context: .
      dockerfile: Dockerfile.client
    depends_on:
      - grpc_service

  kafka_consumer:
    build:
      context: .
      dockerfile: Dockerfile.consumer
    container_name: kafka_consumer
    depends_on:
      - kafka

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    depends_on:
      - prometheus
